Java developing, Lesson#2

src -> ByteCode -> Native
все это происходит на лету виртуальной машиной Java

==========| Команды в Bash - терминале|==========
Сменить директорию: 					cd <путь>
Просмотр всех файлов директории: 		ls
Текущая версия Джавы: 					java -version
Подняться на папку выше: 				cd ..
Удалить папку/файл:						rm -rf <папка/файл>
Скомпилировать указанный файл: 			javac Main.java
// Каждый файл компилируется в файл с таким же названием 
// и расширением .class (Это и есть ТОТ САМЫЙ ByteCode)
Просмотр Байт-кода: 					cat Main.class
//
Запустить Байт-код: 					java Main
// При запуске этой команды, Джава будет искать Байт-код указанного нами файла. После поиска, она транслирует 
// код в Native и отображает результат
//------------------------------------------------
В папке out находится класс который делает наша студия
==================================================

Особенность!: При объявлении переменной в Джава необходимо указывать начальное значение
int i; 	   // неверно
int i = 0; // верно

Целочисленные типы данных: byte(8bit, от -128 до 127), 
						   short(16bit, от -32768 до 32767), 
						   int(32bit, от -2147483648 до 2147483647), 
						   long(64bit, от -9223372036854775808 до 9223372036854775807)
С плавающей точкой:		   float(32bit, от 3.4е-038 до 3.4е+038), 
						   double(64bit, от 1.7е-308 до 1.7е+308)
==================================================
HW: 
01101100 = 0*2^0 + 0*2^1 + 1*2^2 + 1*2^3 + 0*2^4 + 1*2^5 + 1*2^6 + 0*2^7 = 
= 0 + 0 + 4 + 8 + 0 + 32 + 64 + 0 = 108; 
01010101 = 1*2^0 + 0*2^1 + 1*2^2 + 0*2^3 + 1*2^4 + 0*2^5 + 1*2^6 + 0*2^7 = 
= 1 + 0 + 4 + 0 + 16 + 0 + 64 + 0 = 85;
==================================================

Совет! Между бинарным оператором лучше делать оступы
i+2			// за такое убивать!
i + 2		// так норм

